# Archivo: vm_net_logic.yml
---
- name: "1. Confirmar destino (VM: {{ vm_name | upper }}, Modo: {{ net_action | upper }})"
  ansible.builtin.debug:
    msg: "Ejecutando {{ net_action }} en {{ vm_name }} (ID: {{ vm_vmid }}) en nodo PVE: {{ pve_host_ip }}"

# --- ACCIÓN NET_OFF (Desconectar) ---
- name: "2a. [NET_OFF] Desconectar la tarjeta de red (net0) de {{ vm_name | upper }}"
  # Simula la casilla 'Disconnect': mantiene la configuración, pero marca la interfaz como no conectada.
  ansible.builtin.command: "qm set {{ vm_vmid }} --net0 media=disconnected"
  delegate_to: "{{ pve_host_ip }}"
  vars:
    ansible_user: root 
  when: net_action == 'net_off'

# --- ACCIÓN NET_ON (Conectar) ---
- name: "2b. [NET_ON] Reconectar la tarjeta de red (net0) de {{ vm_name | upper }}"
  # Simula desmarcar la casilla 'Disconnect': fuerza el estado 'operacional' o 'conectado'.
  # El comando simplemente fuerza la configuración existente sin el parámetro 'media=disconnected'.
  # NOTA: Aseguramos la configuración completa para evitar que Proxmox la borre si encuentra la clave 'media' vacía.
  ansible.builtin.command: "qm set {{ vm_vmid }} --net0 model=virtio,bridge=vmbr0"
  delegate_to: "{{ pve_host_ip }}"
  vars:
    ansible_user: root 
  when: net_action == 'net_on'
