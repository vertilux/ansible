---
- name: Clean cached and log files on all app servers and compare disk usage
  hosts: app_servers
  become: yes
  gather_facts: no

  vars:
    apps:
      - erp-accltd
      - erp-bzidat
      - erp-espdat
      - erp-mxpdat
      - erp-pwcdat
      - erp-rdmdat
      - erp-saldat
    keep_logs_days: 14

  tasks:
    # -------- df BEFORE --------
    - name: Capture disk usage BEFORE (portable; exclude tmpfs/devtmpfs)
      shell: >
        df -h --output=source,size,used,avail,pcent,target
        | awk 'NR==1 || ($1 !~ /(tmpfs|devtmpfs)/)'
      register: disk_before
      changed_when: false
      failed_when: false

    - name: Show disk usage BEFORE
      debug:
        msg: |
          Disk usage BEFORE cleanup on {{ inventory_hostname }}:
          {{ (disk_before.stdout_lines | default(['N/A'])) | join('\n') }}

    # -------- limpiar cache --------
    - name: Remove cached files (tmp/cache) for each app
      file:
        path: "/home/deploy/{{ item }}/current/tmp/cache"
        state: absent
      loop: "{{ apps }}"

    - name: Recreate cache directories (so app can write again)
      file:
        path: "/home/deploy/{{ item }}/current/tmp/cache"
        state: directory
        owner: deploy
        group: deploy
        mode: '0755'
      loop: "{{ apps }}"

    # -------- logs viejos --------
    - name: Find old log files (older than {{ keep_logs_days }} days)
      find:
        paths: "/home/deploy/{{ item }}/current/log"
        age: "{{ keep_logs_days }}d"
        recurse: yes
        file_type: file
      loop: "{{ apps }}"
      register: old_logs

    - name: Build flat list of log files to delete
      set_fact:
        logs_to_delete: "{{ (logs_to_delete | default([])) + (item.files | default([])) }}"
      loop: "{{ old_logs.results | default([]) }}"

    - name: Delete old log files
      file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ logs_to_delete | default([]) }}"

    # -------- df AFTER --------
    - name: Capture disk usage AFTER (portable; exclude tmpfs/devtmpfs)
      shell: >
        df -h --output=source,size,used,avail,pcent,target
        | awk 'NR==1 || ($1 !~ /(tmpfs|devtmpfs)/)'
      register: disk_after
      changed_when: false
      failed_when: false

    - name: Show cleanup summary (BEFORE vs AFTER)
      debug:
        msg: |
          Cleanup completed on {{ inventory_hostname }}
          Apps processed: {{ apps | length }}
          Log retention: keep last {{ keep_logs_days }} days

          BEFORE:
          {{ (disk_before.stdout_lines | default(['N/A'])) | join('\n') }}

          AFTER:
          {{ (disk_after.stdout_lines | default(['N/A'])) | join('\n') }}
