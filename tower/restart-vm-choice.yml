---
- name: 1. Descubrir el nodo PVE y agregar el host correcto al inventario temporal
  # Ejecutamos en el servidor AWX (localhost) una sola vez
  hosts: localhost
  gather_facts: no

  vars:
    # Obtener el diccionario de las VMs del grupo 'pve' desde un host conocido para evitar 'hostvars' undefined
    # Asumimos que 'pve20' es un host siempre presente en el grupo 'pve'.
    pve_group_vars: "{{ hostvars['pve20'] }}"
    vms_data: "{{ pve_group_vars.proxmox_vms }}"
    
    # Detalle de la VM seleccionada por el survey
    vm_details: "{{ vms_data[vm_to_restart | lower] }}"
    
    # Nombre y Vmid del nodo Proxmox
    vm_pve_node_name: "{{ vm_details.pve_node | lower }}"
    vm_vmid: "{{ vm_details.vmid }}"
    vm_os: "{{ vm_details.os | lower }}"

  tasks:
    - name: Determinar el nodo PVE para la VM
      debug:
        msg: "La VM '{{ vm_to_restart }}' (ID: {{ vm_vmid }}) está alojada en el nodo '{{ vm_pve_node_name }}'."

    - name: 2. Agregar el nodo PVE de destino a un grupo temporal (pve_target)
      # Esto nos permite ejecutar el siguiente play solo contra ese host.
      ansible.builtin.add_host:
        name: "{{ vm_pve_node_name }}"
        groups: pve_target
        # Pasamos las variables de la VM al host de destino
        ansible_vm_vmid: "{{ vm_vmid }}"
        ansible_vm_os: "{{ vm_os }}"
      # NOTA: AWX (Tower) necesita que el nodo ya exista en el inventario para que esto funcione.
      # Ya lo tienes como hosts individuales (pve20, pve30, etc.), lo cual es correcto.

- name: 3. Ejecutar el reinicio contra el nodo PVE de destino
  # Ejecutamos solo en el host agregado al grupo pve_target
  hosts: pve_target
  connection: ssh
  become: yes # Utilizamos la Credencial Machine (SSH) como root
  gather_facts: no
  
  tasks:
    - name: Confirmar la conexión al nodo PVE de destino
      debug:
        msg: "Conectado a {{ inventory_hostname }} para reiniciar VM ID {{ ansible_vm_vmid }}"

    - name: Reiniciar la VM usando 'qm reboot'
      ansible.builtin.command: "qm reboot {{ ansible_vm_vmid }}"

    - name: Esperar 2 minutos (120 segundos) después del reinicio de Windows
      ansible.builtin.wait_for:
        timeout: 120
      when: ansible_vm_os == 'windows'
