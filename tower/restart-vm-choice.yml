---
- name: Reiniciar VMs seleccionadas usando SSH y Delegación
  # Este play se ejecuta en el servidor AWX (localhost) una sola vez
  hosts: localhost
  gather_facts: no
  
  vars:
    # --- Carga de Variables (CRÍTICA) ---
    # Accedemos a las variables de grupo a través de un host específico ('pve20') para evitar el error 'hostvars' undefined.
    # Esta es la forma más estable sin usar Extra Variables.
    pve_group_vars: "{{ hostvars['pve20'] }}"
    vms_data: "{{ pve_group_vars.proxmox_vms }}"
    pve_nodes: "{{ pve_group_vars.pve_nodes }}"
    
  tasks:
    - name: Procesar el reinicio para cada VM seleccionada
      ansible.builtin.block:
        
        # --- Configurar variables para la VM actual del bucle ---
        - name: Definir variables de la VM
          ansible.builtin.set_fact:
            vm_name: "{{ item | lower }}"
            vm_details: "{{ vms_data[item | lower] }}"
            vm_vmid: "{{ vm_details.vmid }}"
            vm_pve_node_name: "{{ vm_details.pve_node | lower }}"
            vm_os: "{{ vm_details.os | lower }}"
            pve_host_ip: "{{ pve_nodes[vm_details.pve_node | lower] }}"
          
        - name: Confirmar la VM y el nodo de destino
          ansible.builtin.debug:
            msg: "Reiniciando {{ vm_name }} (ID: {{ vm_vmid }}). Delegando comando SSH al nodo PVE: {{ vm_pve_node_name }} ({{ pve_host_ip }})"
        
        - name: Reiniciar la VM usando 'qm reboot'
          ansible.builtin.command: "qm reboot {{ vm_vmid }}"
          # DELEGACIÓN CLAVE: Ejecuta el comando en el nodo PVE.
          delegate_to: "{{ pve_host_ip }}"
          vars:
            ansible_user: administrator 
            
        - name: Esperar 2 minutos (120 segundos) después del reinicio de Windows
          ansible.builtin.wait_for:
            timeout: 120
          when: vm_os == 'windows'

      # El bucle se aplica a la directiva 'block', NO a una tarea de acción.
      loop: "{{ vm_to_restart }}"
