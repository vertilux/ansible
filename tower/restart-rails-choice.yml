---
- name: Restart selected Rails apps (Passenger) by touching restart.txt
  hosts: app_servers
  become: yes
  gather_facts: no

  vars:
    app_root: /home/deploy
    app_prefix: erp

    # Full catalog (without "erp-" prefix)
    apps_all:
      - accltd
      - bzidat
      - espdat
      - mxpdat
      - pwcdat
      - rdmdat
      - saldat
      - covdat
      - prndat
      - wepdat

    # ---- Survey variable (do NOT redefine with itself) ----
    # AWX Survey field name: apps_selected
    # It can arrive as a list (['erp-accltd','espdat']) or a comma string ("accltd, espdat")
    survey_apps_raw: "{{ apps_selected | default(omit) }}"

    # Normalize survey to a clean list without prefix
    apps_selected_list: >-
      {%- if survey_apps_raw is not defined -%}
      []
      {%- elif survey_apps_raw is sequence -%}
      {{ survey_apps_raw | list
         | map('regex_replace', '^erp-', '')
         | map('trim')
         | list }}
      {%- else -%}
      {{ survey_apps_raw | string
         | regex_replace('\\s+', '')         # remove spaces
         | split(',')                        # split CSV
         | map('regex_replace', '^erp-', '')
         | reject('equalto','') | list }}
      {%- endif -%}

    # Final target list (no prefix). If nothing selected → all.
    apps: "{{ (apps_selected_list | length > 0) | ternary(apps_selected_list, apps_all) }}"

  tasks:
    - name: Show target host and chosen apps
      debug:
        msg: "Host {{ inventory_hostname }} → will restart: {{ apps | join(', ') }}"

    - name: Ensure Passenger tmp dir exists (per app)
      file:
        path: "{{ app_root }}/{{ app_prefix }}-{{ item }}/current/tmp"
        state: directory
        owner: deploy
        group: deploy
        mode: "0775"
      loop: "{{ apps }}"
      loop_control:
        label: "{{ app_prefix }}-{{ item }}"
      tags: [ensure_tmp]

    - name: Touch restart.txt (Passenger rolling restart)
      become_user: deploy
      file:
        path: "{{ app_root }}/{{ app_prefix }}-{{ item }}/current/tmp/restart.txt"
        state: touch
        modification_time: preserve
        access_time: preserve
      loop: "{{ apps }}"
      loop_control:
        label: "{{ app_prefix }}-{{ item }}"
      register: passenger_touch
      tags: [restart]

    - name: Report what was restarted on this host
      debug:
        msg: >
          Passenger restart triggered for apps: {{
            passenger_touch.results
            | map(attribute='item')
            | map('regex_replace', '^', app_prefix ~ '-')
            | join(', ')
          }}

    - name: Wait a short grace period
      wait_for:
        timeout: 5
      tags: [wait]
