---
- name: Sync all JSON files to AWS S3 (single bucket)
  hosts: all
  become: yes
  gather_facts: no

  vars:
    region: "us-east-1"
    bucket: "erp-accpac"
    slack_token: "{{ slack_token }}"
    json_base_path: "/home/deploy"
    companies:
      - erp-accltd
      - erp-bzidat
      - erp-espdat
      - erp-mxpdat
      - erp-pwcdat
      - erp-rdmdat
      - erp-saldat
      - erp-covdat
      - erp-prndat
      - erp-wepdat

  tasks:
    - name: Upload JSON files for each company
      aws_s3:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        bucket: "{{ bucket }}"
        region: "{{ region }}"
        mode: put
        permission: public-read
        object: "json/{{ item }}/"
        src: "{{ json_base_path }}/{{ item }}/current/public/json/"
        recurse: yes
      loop: "{{ companies }}"
      ignore_errors: yes
      register: s3_results

    - name: Notify Slack on failure
      when: s3_results.results | selectattr('failed', 'defined') | list | length > 0
      community.general.slack:
        token: "{{ slack_token }}"
        msg: |
          ⚠️ Some JSON syncs failed:
          {% for r in s3_results.results if r.failed is defined %}
          - {{ r.item }} → failed
          {% endfor %}
        color: danger

    - name: Notify Slack on success
      when: s3_results.results | selectattr('failed', 'undefined') | list | length > 0
      community.general.slack:
        token: "{{ slack_token }}"
        msg: |
          ✅ JSON sync completed successfully for:
          {% for r in s3_results.results if r.failed is not defined %}
          - {{ r.item }}
          {% endfor %}
        color: good
