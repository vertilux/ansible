---
- name: Restart selected VPN on Miami UDM (via SSH)
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    # Fixed gateway (Miami)
    unifi_gateway_ip: "10.255.255.1"

    # Survey variable
    selected_vpn: ""

    # Slack webhook from credential
    slack_webhook_url: "{{ SLACK_WEBHOOK_URL }}"

  tasks:

    - name: Validate selected VPN
      assert:
        that:
          - selected_vpn | length > 0
        fail_msg: "❌ No VPN selected. Please choose one from the survey."
        success_msg: "✅ Selected VPN: {{ selected_vpn }}"

    - name: Send start notification to Slack
      uri:
        url: "{{ slack_webhook_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          text: |
            :gear: *Starting VPN restart sequence*
            Gateway: `VXMIAUDMSE ({{ unifi_gateway_ip }})`
            VPN: `{{ selected_vpn }}`
      when: slack_webhook_url is defined
      ignore_errors: true

    - name: Pause selected VPN via SSH
      ansible.builtin.shell: |
        ipsec down {{ selected_vpn }}
      delegate_to: "{{ unifi_gateway_ip }}"
      register: pause_result
      ignore_errors: true

    - name: Wait before resuming
      pause:
        seconds: 15

    - name: Resume selected VPN via SSH
      ansible.builtin.shell: |
        ipsec up {{ selected_vpn }}
      delegate_to: "{{ unifi_gateway_ip }}"
      register: resume_result
      ignore_errors: true

    - name: Build Slack message
      set_fact:
        slack_message: >
          {% if (resume_result.rc | default(1)) == 0 %}
          ✅ *VPN restart completed successfully*
              Gateway: `VXMIAUDMSE ({{ unifi_gateway_ip }})`
              VPN: `{{ selected_vpn }}`
          {% else %}
          ⚠️ *VPN restart failed or partially completed*
              Gateway: `VXMIAUDMSE ({{ unifi_gateway_ip }})`
              VPN: `{{ selected_vpn }}`
          {% endif %}

    - name: Send completion message to Slack
      uri:
        url: "{{ slack_webhook_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          text: "{{ slack_message }}"
      when: slack_webhook_url is defined
      ignore_errors: true
