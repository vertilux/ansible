---
- hosts: all
  gather_facts: no
  vars:
    # Estas variables deben pasarse como 'Extra Variables' o Credenciales en AWX
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    bucket: "{{ bucket }}"
    slack_token: "{{ slack_token }}"
    # Se inicializa una lista para registrar fallos
    sync_failures: []
    
    # Lista fija de compa√±√≠as (sites) a sincronizar
    companies:
      - erp-accltd
      - erp-bzidat
      - erp-espdat
      - erp-mxpdat
      - erp-pwcdat
      - erp-rdmdat
      - erp-saldat
      - erp-covdat
      - erp-prndat
      - erp-wepdat

  tasks:
    # 1. Tarea de sincronizaci√≥n: Se itera sobre cada compa√±√≠a usando 'loop' y 'item'
    - name: üîÑ S3 Sync | Upload files for each site
      community.aws.s3_sync:  # <-- M√≥dulo corregido de la colecci√≥n community.aws
        aws_access_key: '{{ aws_access_key }}'
        aws_secret_key: '{{ aws_secret_key }}'
        bucket: '{{ bucket }}'
        region: 'us-east-1'
        # Ruta de origen din√°mica, usando {{ item }}
        file_root: "/home/deploy/{{ item }}/current/public/json/"
        # Prefijo S3 din√°mico para organizar por compa√±√≠a
        key_prefix: "json/{{ item }}"
        permission: public-read
        include: "*"
      loop: "{{ companies }}" 
      ignore_errors: yes
      register: s3_results
    
    # 2. Registrar las compa√±√≠as que fallaron en la sincronizaci√≥n
    - name: üìù Log failed synchronizations
      set_fact:
        # A√±ade el nombre de la compa√±√≠a (item.item) a la lista sync_failures
        sync_failures: "{{ sync_failures + [item.item] }}"
      loop: "{{ s3_results.results }}"
      # Solo registra si la iteraci√≥n fall√≥
      when: item.failed
    
    # 3. Notificaci√≥n de Slack solo si hubo fallas (se ejecuta una vez)
    - name: üö® Send FAILED notification for all failed sites via Slack
      community.general.slack:
        token: '{{ slack_token }}'
        color: danger
        msg: |
          üö® Sales analysis synchronization **FAILED** on one or more sites (AWS S3).
          Failed sites: **{{ sync_failures | join(', ') }}**
      run_once: true
      # Solo se ejecuta si la lista de fallas contiene elementos
      when: sync_failures | length > 0

# -----------------------------------------------------------------------------
# SEGUNDO PLAY: Notificaci√≥n final de √©xito
# Se ejecuta en localhost (AWX/Tower) despu√©s de que el primer play ha terminado
# -----------------------------------------------------------------------------

- hosts: localhost 
  tasks:
    # 4. Notificaci√≥n final de √©xito (si el Play 1 no tuvo errores fatales)
    - name: ‚úÖ Send SUCCESS/COMPLETION notification via Slack
      community.general.slack:
        token: '{{ slack_token }}'
        color: good
        msg: '‚úÖ Sales analysis files successfully synchronized ({{ companies | length }} attempts) to AWS S3.'
